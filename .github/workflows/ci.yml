name: CI
# Triggers:
# - push: only on main (avoids duplicate runs when PRs are open)
# - pull_request: on all branches (verifies PRs)
# - workflow_dispatch: allow manual runs
# Concurrency groups by PR number (if any) or ref to auto-cancel older runs.

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - "*"
  workflow_dispatch:

concurrency:
  group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  frontend-lint-test-build:
    name: Frontend (React) Lint, Test & Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: procumentplatform/frontend-react/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: procumentplatform/frontend-react

      - name: Lint (if configured)
        run: npm run lint --if-present
        working-directory: procumentplatform/frontend-react

      - name: Test (if configured)
        run: npm test -- --ci --watchAll=false
        working-directory: procumentplatform/frontend-react
        continue-on-error: true

      - name: Build
        run: npm run build
        working-directory: procumentplatform/frontend-react

      - name: Upload frontend artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-react-dist
          path: procumentplatform/frontend-react/dist
          if-no-files-found: error
          retention-days: 7

  backend-build:
    name: Backend Build & Publish (with React in wwwroot)
    runs-on: ubuntu-latest
    needs: frontend-lint-test-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Cache NuGet packages
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('procumentplatform/backend/**/packages.lock.json', 'procumentplatform/backend/**/*.csproj') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore
        run: dotnet restore
        working-directory: procumentplatform/backend

      - name: Build (Release)
        run: dotnet build --no-restore -c Release
        working-directory: procumentplatform/backend

      - name: Clean API wwwroot
        run: rm -rf procumentplatform/backend/VWProcurement.API/wwwroot/*

      - name: Download frontend artifact into API wwwroot
        uses: actions/download-artifact@v4
        with:
          name: frontend-react-dist
          path: procumentplatform/backend/VWProcurement.API/wwwroot

      - name: Test (if test projects exist)
        run: dotnet test --no-build -c Release --verbosity normal
        working-directory: procumentplatform/backend
        continue-on-error: true

      - name: Publish API
        run: dotnet publish VWProcurement.API/VWProcurement.API.csproj -c Release -o VWProcurement.API/publish
        working-directory: procumentplatform/backend

      - name: Upload deployable bundle
        uses: actions/upload-artifact@v4
        with:
          name: deploy-bundle
          path: procumentplatform/backend/VWProcurement.API/publish
          if-no-files-found: error
          retention-days: 7

      - name: Debug paths
        run: |
          pwd
          ls -la
          ls -la procumentplatform
          ls -la procumentplatform/frontend-react
          ls -la procumentplatform/backend

  api-smoke:
    name: API Smoke Test (run published app and ping health)
    runs-on: ubuntu-latest
    needs: backend-build
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download deployable bundle
        uses: actions/download-artifact@v4
        with:
          name: deploy-bundle
          path: ./bundle

      - name: Start API in background (port 5080)
        shell: bash
        run: |
          export ASPNETCORE_URLS="http://localhost:5080"
          nohup dotnet ./bundle/VWProcurement.API.dll > app.log 2>&1 &
          echo $! > api.pid
          sleep 6

      - name: Probe health endpoint
        shell: bash
        run: |
          set -e
          curl -f http://localhost:5080/api/health/database

      - name: Show last 50 log lines (for debug)
        if: always()
        shell: bash
        run: |
          tail -n 50 app.log || true

      - name: Stop API
        if: always()
        shell: bash
        run: |
          if [ -f api.pid ]; then kill $(cat api.pid) || true; fi

  trigger-ci:
    name: Trigger CI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Git pull
        run: git pull

      - name: Git commit
        run: git commit --allow-empty -m "Trigger CI"

      - name: Git push
        run: git push